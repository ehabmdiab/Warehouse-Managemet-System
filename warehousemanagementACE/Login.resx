<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>